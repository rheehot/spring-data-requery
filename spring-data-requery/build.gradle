apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'
apply plugin: 'kotlin-noarg'

idea {
    module {
        sourceDirs += file("${buildDir}/generated/source/apt/main/")
        testSourceDirs += file("${buildDir}/generated/source/apt/test/")
        generatedSourceDirs += file("${buildDir}/generated/source/apt/main/")
    }
}

dependencies {

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect"

    optional "org.jetbrains.kotlinx:kotlinx-coroutines-core"

    compile "io.requery:requery"
    optional "io.requery:requery-jackson"

    // For Kotlin classes
    kapt "io.requery:requery-processor"
    kaptTest "io.requery:requery-processor"

    implementation "org.jetbrains:annotations"
    implementation "com.google.code.findbugs:jsr305"

    // spring framework
    compile "org.springframework:spring-beans"
    compile "org.springframework:spring-context"
    compile "org.springframework:spring-expression"
    compile "org.springframework:spring-jdbc"
    compile "org.springframework:spring-tx"
    compile "org.springframework.data:spring-data-commons"

    optional "org.cache2k:cache2k-all"
    optional "org.threeten:threetenbp"
    optional "joda-time:joda-time"

    testCompile "org.springframework.boot:spring-boot-starter-test"
}

compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xjsr305=strict", "-Xjvm-default=compatibility", "-Xenable-jvm-default"]
        javaParameters = true
        apiVersion = "1.2"
        languageVersion = "1.2"
        suppressWarnings = false
    }
}
compileTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xjsr305=strict", "-Xjvm-default=compatibility", "-Xenable-jvm-default"]
        javaParameters = true
        apiVersion = "1.2"
        languageVersion = "1.2"
        suppressWarnings = false
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
