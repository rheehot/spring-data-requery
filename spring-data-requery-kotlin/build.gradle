buildscript {
    repositories {
        mavenCentral()
        maven { url "https://dl.bintray.com/kotlin/dokka/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"

        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"

    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'
apply plugin: 'kotlin-noarg'

allOpen {
    annotation("javax.persistence.Entity")
    annotation("io.requery.Entity")
}
noArg {
    annotation("javax.persistence.Entity")
    annotation("io.requery.Entity")
    invokeInitializers = true
}

sourceSets {
    generated {
        "${buildDir}/generated/source/kapt/main/"
    }
}

idea {
    module {
        sourceDirs += file("${buildDir}/generated/source/kapt/main/")
        testSourceDirs += file("${buildDir}/generated/source/kapt/test/")
        generatedSourceDirs += file("${buildDir}/generated/source/kapt/main/")
    }
}


dependencies {

    implementation project(":spring-data-requery-java")
    
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$kotlinx_coroutines_version"

    compile "com.coupang.kotlinx:kotlinx-data-requery"

    compile "io.requery:requery"
    compile "io.requery:requery-kotlin"
    implementation "io.requery:requery-jackson"

    kapt "io.requery:requery-processor"
    kaptTest "io.requery:requery-processor"

    implementation "javax.inject:javax.inject:1"
    implementation "javax.cache:cache-api"
    implementation "javax.annotation:javax.annotation-api"
    implementation "javax.interceptor:javax.interceptor-api"
    implementation "javax.validation:validation-api"
    implementation "org.eclipse.persistence:javax.persistence"
}

compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xjsr305=strict", "-Xenable-jvm-default"]
        javaParameters = true
        apiVersion = "1.2"
        languageVersion = "1.2"
        suppressWarnings = false
    }
}

compileTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

kotlin {
    experimental {
        coroutines "enable"
    }
}